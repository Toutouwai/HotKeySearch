<?php namespace ProcessWire;

/**
 *
 * Hotkey Search
 *
 * @author Robin Sallis
 *
 * @credits Based largely on AdminHotKeys by "Soma" Philipp Urlich
 *
 * ProcessWire 3.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

class HotkeySearch extends WireData implements Module, ConfigurableModule {

	/**
	 * Module information
	 *
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'Hotkey Search',
			'version' => '0.1.10',
			'summary' => 'Adds configurable hot keys for easier use of the admin search via the keyboard.',
			'author' => 'Robin Sallis',
			'href' => 'https://github.com/Toutouwai/HotkeySearch',
			'icon' => 'keyboard-o',
			'autoload' => 'template=admin',
			'requires' => 'ProcessWire>=3.0.0',
		);
	}

	/**
	 * Construct
	 */
	public function __construct() {
		parent::__construct();
		$this->key_search = 's';
		$this->key_tree = 't';
	}

	/**
	 * Ready
	 */
	public function ready() {
		// Add JS config to admin output
		$settings = array();
		$settings['key_search'] = $this->key_search;
		$settings['key_trigger'] = $this->key_trigger;
		$settings['key_tree'] = $this->key_tree;
		$settings['admin_theme'] = $this->user->admin_theme ?: $this->config->defaultAdminTheme;
		$this->wire()->config->js($this->className(), $settings);
		// Hook to add scripts
		$this->addHookAfter('ProcessController::execute', $this, 'addHksScripts');
	}

	/**
	 * Add scripts
	 *
	 * @param HookEvent $event
	 */
	protected function addHksScripts(HookEvent $event) {
		// If on login no need to go further
		if($this->wire()->process == 'ProcessLogin') return;
		$config = $this->wire()->config;
		$info = $this->getModuleInfo();
		$version = $info['version'];
		$config->scripts->add($config->urls->$this . "mousetrap.min.js?v={$version}");
		$config->scripts->add($config->urls->$this . "{$this}.js?v={$version}");
	}

	/**
	 * Config inputfields
	 *
	 * @param InputfieldWrapper $inputfields
	 */
	public function getModuleConfigInputfields($inputfields) {

		$modules = $this->wire()->modules;

		/* @var InputfieldMarkup $f */
		$f = $modules->InputfieldMarkup;
		$f->name = 'info';
		$f->label = $this->_('Info');
		$markup = $this->_('<p>This module uses Mousetrap for key bindings. See the <a href="https://craig.is/killing/mice" target="_blank">documentation</a> for supported keys.</p>');
		$f->value = $markup;
		$inputfields->add($f);

		/* @var InputfieldText $f */
		$f = $modules->InputfieldText;
		$f_name = 'key_search';
		$f->name = $f_name;
		$f->label = $this->_('Search');
		$f->description = $this->_('Hot key to toggle scroll/focus to search.');
		$f->value = $this->$f_name;
		$inputfields->add($f);

		/* @var InputfieldText $f */
		$f = $modules->InputfieldText;
		$f_name = 'key_tree';
		$f->name = $f_name;
		$f->label = $this->_('Toggle "quick tree"');
		$f->description = $this->_('Hot key to toggle "quick tree" panel.');
		$f->value = $this->$f_name;
		$inputfields->add($f);

	}

}
